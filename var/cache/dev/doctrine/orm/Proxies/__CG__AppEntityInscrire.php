<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Inscrire extends \App\Entity\Inscrire implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'mention', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'year', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'matricule', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'dateInscription', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'parcours', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'Etudiant', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'fichierVir', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'fichierVirement', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'isAdmis', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'reference', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'typePayement', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'statusEcs'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'mention', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'year', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'matricule', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'dateInscription', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'parcours', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'Etudiant', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'fichierVir', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'fichierVirement', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'isAdmis', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'reference', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'typePayement', '' . "\0" . 'App\\Entity\\Inscrire' . "\0" . 'statusEcs'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Inscrire $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getMention(): ?\App\Entity\Mention
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMention', []);

        return parent::getMention();
    }

    /**
     * {@inheritDoc}
     */
    public function setMention(?\App\Entity\Mention $mention): \App\Entity\Inscrire
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMention', [$mention]);

        return parent::setMention($mention);
    }

    /**
     * {@inheritDoc}
     */
    public function getYear(): ?\App\Entity\Years
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYear', []);

        return parent::getYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setYear(?\App\Entity\Years $year): \App\Entity\Inscrire
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYear', [$year]);

        return parent::setYear($year);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateInscription(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateInscription', []);

        return parent::getDateInscription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateInscription(\DateTimeInterface $dateInscription): \App\Entity\Inscrire
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateInscription', [$dateInscription]);

        return parent::setDateInscription($dateInscription);
    }

    /**
     * {@inheritDoc}
     */
    public function getParcours(): ?\App\Entity\Parcours
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParcours', []);

        return parent::getParcours();
    }

    /**
     * {@inheritDoc}
     */
    public function setParcours(?\App\Entity\Parcours $parcours): \App\Entity\Inscrire
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParcours', [$parcours]);

        return parent::setParcours($parcours);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtudiant(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtudiant', []);

        return parent::getEtudiant();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtudiant(?\App\Entity\User $Etudiant): \App\Entity\Inscrire
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtudiant', [$Etudiant]);

        return parent::setEtudiant($Etudiant);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(bool $status): \App\Entity\Inscrire
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getFichierVirement(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFichierVirement', []);

        return parent::getFichierVirement();
    }

    /**
     * {@inheritDoc}
     */
    public function setFichierVirement($fichierVirement): \App\Entity\Inscrire
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFichierVirement', [$fichierVirement]);

        return parent::setFichierVirement($fichierVirement);
    }

    /**
     * {@inheritDoc}
     */
    public function getFichierVir(): ?\Symfony\Component\HttpFoundation\File\File
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFichierVir', []);

        return parent::getFichierVir();
    }

    /**
     * {@inheritDoc}
     */
    public function setFichierVir(?\Symfony\Component\HttpFoundation\File\File $fichierVir): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFichierVir', [$fichierVir]);

        parent::setFichierVir($fichierVir);
    }

    /**
     * {@inheritDoc}
     */
    public function setMatricule($matricule)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMatricule', [$matricule]);

        return parent::setMatricule($matricule);
    }

    /**
     * {@inheritDoc}
     */
    public function getMatricule()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMatricule', []);

        return parent::getMatricule();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsAdmis(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsAdmis', []);

        return parent::getIsAdmis();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsAdmis(int $isAdmis): \App\Entity\Inscrire
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsAdmis', [$isAdmis]);

        return parent::setIsAdmis($isAdmis);
    }

    /**
     * {@inheritDoc}
     */
    public function getReference(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', []);

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setReference(?string $reference): \App\Entity\Inscrire
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', [$reference]);

        return parent::setReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypePayement(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypePayement', []);

        return parent::getTypePayement();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypePayement(string $typePayement): \App\Entity\Inscrire
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypePayement', [$typePayement]);

        return parent::setTypePayement($typePayement);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusEcs(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusEcs', []);

        return parent::getStatusEcs();
    }

    /**
     * {@inheritDoc}
     */
    public function addStatusEc(\App\Entity\StatusEc $statusEc): \App\Entity\Inscrire
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStatusEc', [$statusEc]);

        return parent::addStatusEc($statusEc);
    }

    /**
     * {@inheritDoc}
     */
    public function removeStatusEc(\App\Entity\StatusEc $statusEc): \App\Entity\Inscrire
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeStatusEc', [$statusEc]);

        return parent::removeStatusEc($statusEc);
    }

}
